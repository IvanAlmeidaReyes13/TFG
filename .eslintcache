[{"C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\components\\Buscar.jsx":"1","C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\components\\Navbar.jsx":"2","C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\components\\NavBar.jsx":"3","C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\redux\\peliculasDucks.js":"4","C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\App.jsx":"5","C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\components\\KeyWords.jsx":"6","C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\redux\\usuarioDucks.js":"7","C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\components\\Peliculas.jsx":"8","C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\index.js":"9","C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\components\\Login.jsx":"10","C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\components\\firebase.js":"11","C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\components\\Genero.jsx":"12","C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\redux\\store.js":"13","C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\components\\Comentarios.jsx":"14","C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\components\\Perfil.jsx":"15"},{"size":3489,"mtime":1608237633863,"results":"16","hashOfConfig":"17"},{"size":1731,"mtime":1608236720284,"results":"18","hashOfConfig":"17"},{"size":1678,"mtime":1607885007029,"results":"19","hashOfConfig":"17"},{"size":7323,"mtime":1607932472098,"results":"20","hashOfConfig":"17"},{"size":2357,"mtime":1607932154487,"results":"21","hashOfConfig":"17"},{"size":3377,"mtime":1607932468215,"results":"22","hashOfConfig":"17"},{"size":5167,"mtime":1608143610111,"results":"23","hashOfConfig":"17"},{"size":1854,"mtime":1607285247573,"results":"24","hashOfConfig":"17"},{"size":378,"mtime":1606919488216,"results":"25","hashOfConfig":"17"},{"size":1635,"mtime":1607880533729,"results":"26","hashOfConfig":"17"},{"size":703,"mtime":1606764699163,"results":"27","hashOfConfig":"17"},{"size":3728,"mtime":1607931635355,"results":"28","hashOfConfig":"17"},{"size":631,"mtime":1606764149363,"results":"29","hashOfConfig":"17"},{"size":3748,"mtime":1608237019653,"results":"30","hashOfConfig":"17"},{"size":3867,"mtime":1606766466814,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qa08yv",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"51"},"C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\components\\Buscar.jsx",[],"C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\components\\Navbar.jsx",[],"C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\components\\NavBar.jsx",[],"C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\redux\\peliculasDucks.js",[],"C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\App.jsx",[],["70","71"],"C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\components\\KeyWords.jsx",["72","73"],"C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\redux\\usuarioDucks.js",[],["74","75"],"C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\components\\Peliculas.jsx",["76"],"import React from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { obtenerPeliculaRandom } from \"../redux/peliculasDucks\";\r\n\r\n\r\nconst Peliculas = () => {\r\n  const dispatch = useDispatch();\r\n\r\n    const [posicionPelicula, setPosicionPelicula] = React.useState(0)\r\n    const Peliculas = useSelector((store) => store.peliculas.results);\r\n\r\n    \r\n    const pathImg=\"http://image.tmdb.org/t/p/w185/\";\r\n    \r\n    React.useEffect(() => {\r\n      const InfoData = () => {\r\n        dispatch(obtenerPeliculaRandom());\r\n      };\r\n      InfoData();\r\n    }, [dispatch]);\r\n    \r\n    return (\r\n      <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <div className=\"d-flex justify-content-center text-center\">\r\n      </div>\r\n      {console.log(Peliculas[posicionPelicula])}\r\n      {Peliculas[posicionPelicula]!==undefined?(\r\n        <div className='text-center'><h3>{Peliculas[posicionPelicula][\"title\"]}</h3>\r\n            <div className='card text-center mt-4'>\r\n            <div className=\"card-body\">\r\n                <img src={pathImg+Peliculas[posicionPelicula][\"poster_path\"]} className='img-fluid'/>\r\n                <div className=\"card-text\">Descripcion: {Peliculas[posicionPelicula][\"overview\"]} </div>\r\n            </div>\r\n            \r\n            </div>\r\n        </div>\r\n      ):(null)\r\n    }\r\n   \r\n   {\r\n     posicionPelicula<=19 && posicionPelicula>0?(\r\n       <button className='btn btn-dark float-left'\r\n       onClick={()=>setPosicionPelicula(posicionPelicula-1)}\r\n       >Anterior</button>):(null)\r\n       \r\n      }\r\n    {\r\n      posicionPelicula>=0 && posicionPelicula<19?(\r\n        <button className='btn btn-dark float-right'\r\n        onClick={()=>setPosicionPelicula(posicionPelicula+1)}\r\n        >Siguiente</button>):(null)\r\n      }\r\n    </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Peliculas;\r\n",["77","78"],"C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\index.js",[],["79","80"],"C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\components\\Login.jsx",[],"C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\components\\firebase.js",[],["81","82"],"C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\components\\Genero.jsx",["83","84","85"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  obtenerGenerosPeliculasAccion,\r\n  obtenerPeliculaPorGeneroAccion,\r\n} from \"../redux/peliculasDucks\";\r\nimport Comentarios from \"./Comentarios\";\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\n\r\nconst Genero = () => {\r\n  const [generoSeleccionado, setGeneroSeleccionado] = useState(\"28\");\r\n\r\n  const dispatch = useDispatch();\r\n  const peliculaEscogida = useSelector((store) => store.peliculas.pelicula);\r\n  const pathImg = \"http://image.tmdb.org/t/p/w185/\";\r\n  const pathTrailer=\"https://www.youtube.com/embed/\";\r\n  const generos = useSelector((store) => store.peliculas.generos);\r\n \r\n  React.useEffect(() => {\r\n    const InfoData = () => {\r\n      dispatch(obtenerGenerosPeliculasAccion());\r\n      dispatch(obtenerPeliculaPorGeneroAccion(generoSeleccionado));\r\n    };\r\n    InfoData();\r\n  }, [dispatch]);\r\n  \r\n  const generarGenero = (e) => {\r\n    setGeneroSeleccionado(e.target.value);\r\n    // dispatch(obtenerPeliculaPorGeneroAccion(generoSeleccionado));\r\n  };\r\n\r\n  const buscarPelicula = () => {\r\n    dispatch(obtenerPeliculaPorGeneroAccion(generoSeleccionado));\r\n  };\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"form-group\">\r\n        <label>Seleccione un genero por el que buscar</label>\r\n        <select\r\n          value={generoSeleccionado}\r\n          onChange={(e) => generarGenero(e)}\r\n          className=\"form-control\"\r\n        >\r\n          {generos &&\r\n            generos.map((item) => (\r\n              <option key={item.name} value={item.id}>\r\n                {item.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n        <button\r\n          className=\"btn btn-dark mt-3 float-right\"\r\n          onClick={() => buscarPelicula()}\r\n        >\r\n          Buscar\r\n        </button>\r\n      </div>\r\n      {peliculaEscogida && (\r\n        <div className=\"text-center\">\r\n          <h3>{peliculaEscogida.titulo}</h3>\r\n          <div className=\"card text-center mt-4 bg-transparent \">\r\n            <div className=\"card-body \">\r\n              <div className=\"row mx-auto\">\r\n                <div className=\"col mx-auto  \">\r\n                  <img\r\n                    src={pathImg + peliculaEscogida.foto}\r\n                    className=\"img-fluid\"\r\n                  />\r\n                  <br />\r\n\r\n                </div>\r\n                </div>\r\n                <div className=\"row mx-auto\">\r\n                <div className=\"col-md-6 mx-auto\">\r\n                  <Jumbotron className=\"card-text bg-white\">\r\n                    <strong>Descripcion:</strong> {peliculaEscogida.descripcion}<br />\r\n                    <strong>Generos:</strong> \r\n                    {\r\n                      peliculaEscogida.genero.map((item) => (\r\n                        item!==undefined&& <span key={item}>{item}<br /></span> \r\n                        ))\r\n                      }\r\n                    <strong>Puntuación media:</strong> {peliculaEscogida.puntuacion}/10<br />\r\n\r\n                  </Jumbotron>\r\n                </div>\r\n              </div>\r\n                <div className='row '>\r\n\r\n                  <div className='col mx-auto'>\r\n                      <iframe className='mt-5' width='1000' height='500'   src={pathTrailer+peliculaEscogida.trailer} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                  </div>\r\n\r\n                  </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {peliculaEscogida && (\r\n        <Comentarios peliculaComentarios={peliculaEscogida} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Genero;\r\n","C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\redux\\store.js",[],"C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\components\\Comentarios.jsx",["86","87","88","89"],"C:\\xampp\\htdocs\\TFG\\tfg-ivan-almeida\\src\\components\\Perfil.jsx",["90"],"import React from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actualizarDisplayNameAccion,actualizarFotoAccion } from \"../redux/usuarioDucks\";\r\n\r\nconst Perfil = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const usuario = useSelector((store) => store.usuario.user);\r\n  const loading = useSelector((store) => store.usuario.loading);\r\n  // console.log(usuario)\r\n\r\n  const [displayName, setDisplayName] = React.useState(usuario.displayName);\r\n  const [editarNombre, setEditarNombre] = React.useState(false);\r\n  const [error, setError] = React.useState(false);\r\n\r\n  const botonEditarNombre = () => {\r\n    if (!displayName.trim()) {\r\n      console.log(\"nombre vacío\");\r\n      return;\r\n    }\r\n    dispatch(actualizarDisplayNameAccion(displayName));\r\n    setEditarNombre(false);\r\n  };\r\n\r\n  const seleccionarArchivo = (e) => {\r\n    console.log(e.target.files[0])   \r\n    const imagen = e.target.files[0]\r\n\r\n    if(imagen === undefined){\r\n        console.log('sin imagen')\r\n        return\r\n    }\r\n\r\n    if(imagen.type === 'image/jpeg' || imagen.type === 'image/png'){\r\n        dispatch(actualizarFotoAccion(imagen))       \r\n        setError(false) \r\n        }else{\r\n        console.log('archivo no válido')\r\n        setError(true)\r\n        return\r\n        }\r\n}\r\n  return (\r\n    <div className=\"mt-5 text-center\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <img\r\n            src={usuario.photoURL}\r\n            width=\"100\"\r\n            className=\"img-fluid rounded\"\r\n          />\r\n          <h5 className=\"card-title\">Nombre: {usuario.displayName}</h5>\r\n          <p className=\"card-text\">Email: {usuario.email}</p>\r\n          <button\r\n            className=\"btn btn-dark\"\r\n            onClick={() => setEditarNombre(true)}\r\n          >\r\n            Editar Nombre\r\n          </button>\r\n        </div>\r\n        <div className=\"custom-file\">\r\n          {error && (\r\n            <div className=\"alert alert-warning\">Foto en .png o .jpg</div>\r\n          )}\r\n          <input\r\n            type=\"file\"\r\n            className=\"custom-file-input\"\r\n            id=\"validatedCustomFile\"\r\n            onChange={(e) => seleccionarArchivo(e)}\r\n            required\r\n            disabled={loading}\r\n            style={{ display: \"none\" }}\r\n          />\r\n          <label\r\n            className={loading ? \"btn btn-dark disabled\" : \"btn btn-dark\"}\r\n            htmlFor=\"validatedCustomFile\"\r\n          >\r\n            Editar foto perfil\r\n          </label>\r\n        </div>\r\n        {loading && (\r\n          <div className=\"card-body\">\r\n            <div className=\"d-flex justify-content-center my-2\">\r\n              <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {editarNombre && (\r\n          <div className=\"card-body\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-md-5\">\r\n                <div className=\"input-group mb-3\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    aria-label=\"Recipient's username\"\r\n                    value={displayName}\r\n                    onChange={(e) => setDisplayName(e.target.value)}\r\n                  />\r\n                  <div className=\"input-group-append\">\r\n                    <button\r\n                      className=\"btn btn-outline-secondary\"\r\n                      type=\"button\"\r\n                      onClick={() => botonEditarNombre()}\r\n                    >\r\n                      Editar\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Perfil;\r\n",{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":13,"column":11,"nodeType":"97","messageId":"98","endLine":13,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":59,"column":17,"nodeType":"101","endLine":62,"endColumn":19},{"ruleId":"91","replacedBy":"102"},{"ruleId":"93","replacedBy":"103"},{"ruleId":"99","severity":1,"message":"100","line":34,"column":17,"nodeType":"101","endLine":34,"endColumn":102},{"ruleId":"91","replacedBy":"104"},{"ruleId":"93","replacedBy":"105"},{"ruleId":"91","replacedBy":"106"},{"ruleId":"93","replacedBy":"107"},{"ruleId":"91","replacedBy":"108"},{"ruleId":"93","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":25,"column":6,"nodeType":"112","endLine":25,"endColumn":16,"suggestions":"113"},{"ruleId":"99","severity":1,"message":"100","line":68,"column":19,"nodeType":"101","endLine":71,"endColumn":21},{"ruleId":"114","severity":1,"message":"115","line":94,"column":23,"nodeType":"101","endLine":94,"endColumn":248},{"ruleId":"95","severity":1,"message":"116","line":12,"column":10,"nodeType":"97","messageId":"98","endLine":12,"endColumn":20},{"ruleId":"95","severity":1,"message":"117","line":12,"column":22,"nodeType":"97","messageId":"98","endLine":12,"endColumn":35},{"ruleId":"110","severity":1,"message":"118","line":44,"column":6,"nodeType":"112","endLine":44,"endColumn":16,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":97,"column":30,"nodeType":"122","messageId":"123","endLine":97,"endColumn":31},{"ruleId":"99","severity":1,"message":"100","line":48,"column":11,"nodeType":"101","endLine":52,"endColumn":13},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'pathTrailer' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["124"],["125"],["124"],["125"],["124"],["125"],["124"],["125"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'generoSeleccionado'. Either include it or remove the dependency array.","ArrayExpression",["126"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'fechaDeHoy' is assigned a value but never used.","'setFechaDeHoy' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'verComentarios'. Either include it or remove the dependency array.",["127"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [dispatch, generoSeleccionado]",{"range":"132","text":"133"},"Update the dependencies array to be: [pelicula, verComentarios]",{"range":"134","text":"135"},[904,914],"[dispatch, generoSeleccionado]",[1530,1540],"[pelicula, verComentarios]"]